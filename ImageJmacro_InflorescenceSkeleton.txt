
inImage = getDirectory("Choose the input folder");
inResult2 = getDirectory("Choose the output folder");
images = getFileList(inImage);



// START NEW OR CONTINUE SELECTION
pathContinued = inResult2 + "Log.txt";
if(File.exists(pathContinued)) {
	filestring=File.openAsString(pathContinued);
	rows=split(filestring, "\n");
	x=newArray(rows.length);
	for(b=0; b<rows.length; b++)
	{
	columns=split(rows[b],"\t");
	g=parseInt(columns[0]) + 1;
	} 
		}
	else
		{
		g = 0;
		}

// CORE
for(i = g ; i < images.length; i++)
{
	inputPath = inImage + images[i];       
	open(inputPath);
	run("Duplicate...", "title=plant0.JPG");

Date = "yyyymmdd";
nameOfTray0 = 0;
Dialog.create("RAPA_macro");
Dialog.addString("Date: ", Date);
Dialog.show();
Date = Dialog.getString();

nameOfPlant0 = "PX";
Dialog.create("RAPA_macro");
Dialog.addString("Plant ID: ", nameOfPlant0);
Dialog.show();
nameOfPlant = Dialog.getString();

	propres = (i / images.length) * 100;
	print(propres + "% of images done");
	lab = Date + " " + nameOfPlant;
	print(lab)

rename("pic");




//----------------------------------
// Extract inflorescence data
//----------------------------------

selectWindow("pic");
setTool(0);
Dialog.create("Inflorescence selection");
selectionString = "Select inflorescence and press OK.";
waitForUser(selectionString);


run("Clear Outside");
run("Duplicate...", "title=Inflo.JPG");
rename("Inflo.JPG");

run("Set Measurements...", "  display redirect=None decimal=6");
run("Measure");
run("Clear Results");

setBatchMode(true);
selectWindow("Inflo.JPG");
run("Duplicate...", "title=Inflo0.JPG");
rename(nameOfPlant);
run("Invert");

// Color Thresholder 2.0.0-rc-8/1.49c
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("HSB Stack");
run("Convert Stack to Images");
selectWindow("Hue");
rename("0");
selectWindow("Saturation");
rename("1");
selectWindow("Brightness");
rename("2");
min[0]=185;
max[0]=255;
filter[0]="pass";
min[1]=20;
max[1]=255;
filter[1]="pass";
min[2]=86;
max[2]=255;
filter[2]="pass";
for (ll=0;ll<3;ll++){
  selectWindow(""+ll);
  setThreshold(min[ll], max[ll]);
  run("Convert to Mask");
  if (filter[ll]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (ll=0;ll<3;ll++){
  selectWindow(""+ll);
  close();
}

selectWindow("Result of Result of 0");
rename(a);
// Colour Thresholding-------------
setBatchMode(false);

run("Remove Outliers...", "radius=2 threshold=50 which=Bright");
run("Remove Outliers...", "radius=4 threshold=50 which=Dark");

setOption("BlackBackground", true);
run("Make Binary");
run("Create Selection");
run("Add to Manager");
roiManager("Select", 0);
run("Clear Outside");
roiManager("Show All with labels");
selectWindow(nameOfPlant);
rename(nameOfPlant + "_rosette_" + Date + ".tif");	

selectWindow(nameOfPlant + "_rosette_" + Date + ".tif");	
run("8-bit");		
run("Make Binary");
run("Skeletonize");
run("Duplicate...", "title=skeleton.JPG");
rename(nameOfPlant + "_" + Date + "_InfloSkeleton" + ".tif");

selectWindow(nameOfPlant + "_" + Date + "_InfloSkeleton" + ".tif");
run("Analyze Skeleton (2D/3D)", "prune=none");

saveAs("Results", inResult2 + nameOfPlant + "_Siliques_data_aut.xls");

nbr0 = nResults;
for (incr=0; incr<nbr0; incr++)
{
	setResult("Label", incr, nameOfPlant);				
}	

updateResults();
saveAs("Results", inResult2 + nameOfPlant + "_Siliques_data_aut.xls");	
selectWindow("Results");
run("Close");





//////////////////////////////////////////////
//		End of the tray analysis
//////////////////////////////////////////////

roiManager("reset");
selectWindow("ROI Manager");
run("Close");
selectWindow("Log");
run("Close");
run("Close All");

	tray = i;
	print(tray);
	selectWindow("Log");
    saveAs("text", inResult2 + "Log.txt");
	run("Close");
}
				
	


















